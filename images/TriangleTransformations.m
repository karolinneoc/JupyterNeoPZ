(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Input::Initialization:: *)
ProyectTopoTriangle[point_,side_]:=Block[{fpoint=point,fside=side,ponto,points,pointo},
fpoint=fpoint//N;
If[fside==3,
points={fpoint,Labeled[{fpoint[[1]],0.0},ToString[{fpoint[[1]],0.0}]]};
];
If[fside==4,
ponto={(fpoint[[1]]-fpoint[[2]]+1)/2,(-1.0*(fpoint[[1]]-fpoint[[2]]+1)/2) + 1};
points={fpoint,Labeled[ ponto, ToString[ponto]]};
];
If[fside==5,
points={fpoint,Labeled[{0,fpoint[[2]]},ToString[{0,fpoint[[2]]}]]};
];
If[fside==6,
pointo={(fpoint[[1]]-fpoint[[2]]+1)/2,(-1.0*(fpoint[[1]]-fpoint[[2]]+1)/2) + 1};
points={Labeled[{fpoint[[1]],0},ToString[{fpoint[[1]],0}]],Labeled[fpoint,ToString[fpoint]],Labeled[{0,fpoint[[2]]},ToString[{0,fpoint[[2]]}]],fpoint,Labeled[pointo,ToString[pointo]]};
];
graf= ListPlot[points,Joined->True,PlotStyle->Orange,PlotRange->{{-0.3,1.3},{-0.3,1.3}},PlotLegends->{"SideToSideTransform",Blue}];
Return[graf];
];



(* ::Input::Initialization:: *)

ProyectShapeTriangle[point_,side_]:=Block[{fpoint=point,fside=side,ponto,x1,x2,x3,p1,p2,p3,y1,y2,y3},
fpoint=fpoint//N;
If[fside==3,
x=fpoint[[1]]+fpoint[[2]]/2;
y=0;
pointo={x,y};
points={fpoint,Labeled[pointo,ToString[pointo]]};
];
If[fside==4,
ponto={(fpoint[[1]]-fpoint[[2]]+1)/2,(-1.0*(fpoint[[1]]-fpoint[[2]]+1)/2) + 1};
points={fpoint,Labeled[ ponto, ToString[ponto]]};
];
If[fside==5,
x=0;
y=1.0-(1-fpoint[[2]]-(fpoint[[1]])/2);
pointo={x,y};
points={fpoint,Labeled[pointo,ToString[pointo]]};
];
If[fside==100,
x1=fpoint[[1]]+fpoint[[2]]/2;
y1=0;
p1={x1,y1};
x2=0;
y2=1.0-(1-fpoint[[2]]-(fpoint[[1]])/2);
p2={x2,y2};
x3=0;
y3=1.0-(1-fpoint[[2]]-(fpoint[[1]])/2);
p3={x3,y3};
p3={(fpoint[[1]]-fpoint[[2]]+1)/2,(-1.0*(fpoint[[1]]-fpoint[[2]]+1)/2) + 1};
points={Labeled[p1,ToString[p1]],Labeled[fpoint,ToString[fpoint]],Labeled[p2,ToString[p2]],fpoint,Labeled[p3,ToString[p3]]};

];
graf= ListPlot[points,Joined->True,PlotStyle->Purple,PlotLegends->{"ProjectPoint2dTriangToRib",Purple},PlotRange->{{-0.3,1.3},{-0.3,1.3}}];
Return[graf];
];


(* ::Input::Initialization:: *)

PlotProyecTriangle[point_,side_]:=Block[{fpoint=point,fside=side,result,pointsTriangle,PlotTriangle,PlotPoint},
pointsTriangle={{0,0},{1,0},{0,1},{0,0}};
PlotTriangle=ListPlot[pointsTriangle,Joined->True,Frame->True,PlotStyle->Black,PlotRange->{{-0.3,1.3},{-0.3,1.3}},FrameLabel->{{"\[Eta]",""},{"\[Xi]","TRIANGLE TRANSFORMATIONS"}}];

PlotPoint=Graphics[{PointSize[Large],Red,+Point[fpoint]},ImageSize->Large];
result=Show[{PlotTriangle,ProyectShapeTriangle[fpoint,fside],ProyectTopoTriangle[fpoint,fside],PlotPoint},ImageSize->470];
Return[result];
];



